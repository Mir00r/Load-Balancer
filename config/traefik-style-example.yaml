# Comprehensive Traefik-Style Load Balancer Configuration
# This configuration showcases all advanced features including HTTP/3, gRPC,
# traffic management, security, and observability

# Server Configuration
server:
  port: 8080
  read_timeout: 30s
  write_timeout: 30s
  idle_timeout: 120s

# Load Balancer Configuration
load_balancer:
  algorithm: "round_robin"
  health_check:
    enabled: true
    interval: 30s
    timeout: 10s
    path: "/health"
    port: 80
    failure_threshold: 3
    success_threshold: 2

# Backend Servers
backends:
  - id: "web1"
    url: "http://localhost:3001"
    weight: 10
    max_conns: 100
    health_check:
      path: "/health"
      interval: 30s
  - id: "web2"
    url: "http://localhost:3002"
    weight: 10
    max_conns: 100
    health_check:
      path: "/health"
      interval: 30s
  - id: "web3"
    url: "http://localhost:3003"
    weight: 10
    max_conns: 100
    health_check:
      path: "/health"
      interval: 30s

# Connection Pool Configuration
connection_pool:
  max_idle_conns: 100
  max_active_conns: 1000
  max_conn_lifetime: 300s
  idle_timeout: 90s
  connect_timeout: 10s
  health_check_interval: 30s
  enable_keepalive: true
  keepalive_idle: 30s

# Metrics Configuration
metrics:
  enabled: true
  port: 9090
  path: "/metrics"

# Admin Interface
admin:
  enabled: true
  port: 8081
  path: "/admin"

# Logging Configuration
logging:
  level: "info"
  file: "load-balancer.log"
  max_size: 100
  max_backups: 3
  max_age: 30
  compress: true

# Advanced Traefik-Style Features
traefik_style:
  # Traffic Management
  traffic_management:
    # Session Stickiness
    session_stickiness:
      enabled: true
      cookie_name: "lb_session"
      header_name: "X-Session-ID"
      ttl: 3600s
    
    # Blue-Green Deployment
    blue_green:
      enabled: false
      blue_backends: ["web1", "web2"]
      green_backends: ["web3"]
      active_slot: "blue"
      switch_header: "X-Deployment-Slot"
    
    # Canary Deployment
    canary:
      enabled: true
      canary_backends:
        - url: "http://localhost:3004"
          backend_id: "canary1"
          weight: 20
      traffic_split: 10  # 10% of traffic goes to canary
      split_header: "X-Canary"
    
    # Traffic Mirroring
    traffic_mirroring:
      enabled: true
      targets:
        - url: "http://localhost:3005"
          name: "analytics"
          timeout: 5s
          ignore_body: false
      async: true
      sample_rate: 0.1  # Mirror 10% of requests
    
    # Circuit Breaker
    circuit_breaker:
      enabled: true
      failure_threshold: 5
      success_threshold: 3
      recovery_timeout: 30s
      request_volume_threshold: 20

  # JWT Authentication
  jwt:
    enabled: true
    algorithm: "RS256"
    public_key_path: "./certs/jwt-public.key"
    private_key_path: "./certs/jwt-private.key"
    token_expiry: 86400s  # 24 hours
    clock_skew: 300s      # 5 minutes
    required_claims: ["sub", "exp", "iat"]
    audience_validation: true
    audience: "load-balancer-api"
    issuer_validation: true
    issuer: "load-balancer"
    path_rules:
      - path: "/api/v1/admin/*"
        required_roles: ["admin"]
        required_scopes: ["admin:write"]
      - path: "/api/v1/users/*"
        required_roles: ["user", "admin"]
        required_scopes: ["user:read"]
    users:
      - username: "admin"
        roles: ["admin"]
        scopes: ["admin:read", "admin:write", "user:read", "user:write"]
      - username: "user"
        roles: ["user"]
        scopes: ["user:read"]

  # Web Application Firewall
  waf:
    enabled: true
    mode: "block"  # "block", "monitor", "off"
    max_request_size: 10485760  # 10MB
    max_header_size: 8192
    max_uri_length: 2048
    max_query_string_length: 1024
    blocked_user_agents:
      - "bot"
      - "crawler"
      - "scanner"
      - "sqlmap"
      - "nmap"
    allowed_methods: ["GET", "POST", "PUT", "PATCH", "DELETE", "HEAD", "OPTIONS"]
    
    rate_limiting:
      enabled: true
      requests_per_min: 100
      window_size: 60s
      cleanup_interval: 300s
    
    security_headers:
      enabled: true
      content_type_nosniff: true
      frame_options: "SAMEORIGIN"
      xss_protection: "1; mode=block"
      content_security_policy: "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'"
      strict_transport_security: "max-age=31536000; includeSubDomains"
      referrer_policy: "strict-origin-when-cross-origin"
    
    rules:
      - name: "SQL Injection Detection"
        pattern: "(?i)(union|select|insert|delete|update|drop|create|alter)\\s"
        action: "block"
        enabled: true
      - name: "XSS Detection"
        pattern: "(?i)<script.*?>.*?</script.*?>"
        action: "block"
        enabled: true
      - name: "Path Traversal"
        pattern: "\\.\\./"
        action: "block"
        enabled: true
    
    enable_bot_detection: true

  # Observability
  observability:
    enabled: true
    
    tracing:
      enabled: true
      service_name: "traefik-style-load-balancer"
      service_version: "1.0.0"
      environment: "production"
      sample_rate: 0.1
      max_span_events: 128
      exporters:
        - type: "jaeger"
          endpoint: "http://localhost:14268/api/traces"
        - type: "console"
          enabled: true
    
    metrics:
      enabled: true
      prefix: "traefik_lb"
      labels:
        service: "load_balancer"
        version: "1.0.0"
      exporters:
        - type: "prometheus"
          endpoint: "/metrics"
          port: 9090
        - type: "console"
          enabled: true
      histogram_buckets: [0.005, 0.01, 0.025, 0.05, 0.1, 0.25, 0.5, 1, 2.5, 5, 10]
    
    logging:
      enabled: true
      structured_format: true
      include_trace: true
      include_span: true
      sensitive_headers: ["Authorization", "X-API-Key", "Cookie", "X-Auth-Token"]
      fields:
        service: "load_balancer"
        component: "proxy"
    
    distributed_tracing:
      enabled: true
      trace_header: "X-Trace-ID"
      span_header: "X-Span-ID"
      baggage_header: "X-Baggage"
      propagate_headers: ["X-Request-ID", "X-Correlation-ID", "X-User-ID"]
      custom_tags:
        version: "1.0.0"
        environment: "production"

  # HTTP/3 Support
  http3:
    enabled: false
    port: 8443
    cert_file: "./certs/server.crt"
    key_file: "./certs/server.key"
    max_stream_timeout: 30s
    max_idle_timeout: 300s
    max_incoming_streams: 100
    max_incoming_uni_streams: 100
    keep_alive: true
    enable_datagrams: false

  # gRPC Support
  grpc:
    enabled: true
    timeout: 30s
    enable_h2c: true
    max_receive_size: 4194304  # 4MB
    max_send_size: 4194304     # 4MB
    enable_reflection: false
    enable_compression: true

  # Service Discovery
  service_discovery:
    enabled: false
    provider: "consul"
    endpoints: ["localhost:8500"]
    namespace: "default"
    interval: 30s
    timeout: 10s
    
    tls:
      enabled: false
      cert_file: "./certs/consul.crt"
      key_file: "./certs/consul.key"
      ca_file: "./certs/consul-ca.crt"
      insecure_skip_verify: false
    
    auth:
      token: "consul-token"
    
    filters:
      - key: "service_name"
        values: ["web-service"]
        operator: "equals"
      - key: "tags"
        values: ["production"]
        operator: "contains"

  # Let's Encrypt Integration
  lets_encrypt:
    enabled: false
    email: "admin@example.com"
    domains: ["api.example.com", "www.example.com"]
    challenge_type: "http"
    storage_path: "./certs/letsencrypt"
    key_type: "ec256"
    renewal_days: 30
    test_mode: true

  # Plugin System
  plugins:
    enabled: false
    directory: "./plugins"
    
    wasm_plugins:
      - name: "custom-auth"
        path: "./plugins/auth.wasm"
        enabled: true
        priority: 100
        paths: ["/api/v1/*"]
        methods: ["GET", "POST"]
        config:
          secret_key: "your-secret-key"
          timeout: 30
      
      - name: "rate-limiter"
        path: "./plugins/ratelimit.wasm"
        enabled: true
        priority: 200
        config:
          requests_per_second: 10
          burst_size: 20
    
    http_plugins:
      - name: "external-auth"
        url: "http://auth-service:8080/validate"
        enabled: false
        timeout: 5s
        priority: 150
        headers:
          X-API-Key: "plugin-api-key"
        config:
          cache_ttl: 300

# TLS Configuration
tls:
  enabled: true
  cert_file: "./certs/server.crt"
  key_file: "./certs/server.key"
  min_version: "1.2"
  cipher_suites:
    - "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384"
    - "TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305"
    - "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256"

# Security Configuration
security:
  enable_hsts: true
  hsts_max_age: 31536000
  enable_csrf: true
  csrf_token_length: 32
  enable_cors: true
  cors_allowed_origins: ["https://example.com", "https://api.example.com"]
  cors_allowed_methods: ["GET", "POST", "PUT", "DELETE", "OPTIONS"]
  cors_allowed_headers: ["Content-Type", "Authorization", "X-Requested-With"]

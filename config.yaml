load_balancer:
  strategy: "round_robin"  # Options: round_robin, weighted_round_robin, least_connections
  port: 8080
  max_retries: 3
  retry_delay: 100ms
  timeout: 30s
  
  health_check:
    enabled: true
    interval: 30s
    timeout: 5s
    healthy_threshold: 2
    unhealthy_threshold: 3
    path: "/health"
  
  # Enhanced Rate Limiting with NGINX-style features
  rate_limit:
    enabled: true
    requests_per_second: 10  # Lower for testing
    burst_size: 20
    # IP-based whitelist and blacklist
    whitelist_ips:
      - "127.0.0.1"
      - "::1"
    blacklist_ips:
      - "192.168.100.50"
    # Path-based rate limiting rules
    path_rules:
      - path: "/api/*"
        requests_per_second: 5
        burst_size: 10
      - path: "/admin/*"
        requests_per_second: 2
        burst_size: 5
  
  # HTTP Basic and Bearer Authentication
  auth:
    enabled: true
    type: "basic"  # Options: basic, bearer
    realm: "Load Balancer Admin"
    # Users for basic auth
    users:
      admin: "$2a$10$N9qo8uLOickgx2ZMRZoMye/jJiDbYyZhLXVrGO4pQU8Z3QVQ2DY6e"  # password: secret
      user: "$2a$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi"   # password: password
    # Bearer tokens
    tokens:
      - "bearer-token-123"
      - "api-key-456"
    # Path-based auth rules
    path_rules:
      - path: "/admin/*"
        required: true
        methods: ["GET", "POST", "PUT", "DELETE"]
      - path: "/api/v1/admin/*"
        required: true
        methods: ["POST", "PUT", "DELETE"]
  
  # SSL/TLS Configuration
  ssl:
    enabled: false  # Set to true when certificates are available
    cert_file: "certs/server.crt"
    key_file: "certs/server.key"
    min_version: "1.2"  # TLS 1.2
    max_version: "1.3"  # TLS 1.3
    cipher_suites:
      - "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384"
      - "TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305"
      - "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256"
    http2: true
    redirect_http: true  # Redirect HTTP to HTTPS
  
  circuit_breaker:
    enabled: true
    failure_threshold: 5
    recovery_timeout: 60s
    max_requests: 10

backends:
  - id: "backend-1"
    url: "http://localhost:8081"
    weight: 1
    health_check_path: "/health"
    max_connections: 100
    timeout: 30s
  
  - id: "backend-2"
    url: "http://localhost:8082"
    weight: 1
    health_check_path: "/health"
    max_connections: 100
    timeout: 30s

# Static content delivery configuration
static:
  enabled: true
  root: "./static"
  index_files: ["index.html", "index.htm"]
  gzip: true
  cache_control: "public, max-age=3600"
  paths:
    - path: "/static/*"
      root: "./static"
    - path: "/assets/*"
      root: "./assets"

# Proxy settings for WebSocket support
proxy:
  websocket_enabled: true
  upgrade_timeout: 60s
  read_timeout: 60s
  write_timeout: 60s
  buffer_size: 4096

logging:
  level: "info"  # Options: trace, debug, info, warn, error, fatal, panic
  format: "json"  # Options: json, text
  output: "stdout"  # Options: stdout, stderr, file
  file: "logs/load-balancer.log"
  max_size: 100
  max_backups: 3
  max_age: 28
  compress: true
